<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Задаем путь, с какими классами spring можем взаимодействовать и также откуда считывать аннотации.
    В нашем случае spring взаимодействует со всеми классами. -->
    <context:component-scan base-package="ru.clinicPetWeb" />

    <mvc:resources mapping="/resources/**" location="/resources/" />

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/" /> <!-- Путь ко всем вьюшкам. Начинается с webapp -->
        <property name="suffix" value=".jsp" /> <!-- Указываем формат вьюшек -->
    </bean>

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"-->
          <!--p:prefix="/views/" p:suffix=".jsp" p:order="1"/>-->

    <!--<bean id="viewResolver2" class="org.springframework.web.servlet.view.InternalResourceViewResolver"-->
          <!--p:prefix="/views/" p:suffix=".html" p:order="2"/>-->

    <!-- Создаём sessionFactory от Spring для Hibernate Template -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <!-- Создаём бин HibernateTemplate от Spring -->
    <bean class="org.springframework.orm.hibernate4.HibernateTemplate">
        <!-- Передаём этому классу sessionFactory, какой объявлен выше -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Объявляем Транзакцию для HibernateTemplate от Spring. Если не объявить,
         то работа будет только в режиме read only -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- Для использовании аннотаций, какие отвечают за транзакцию -->
    <tx:annotation-driven/>

    <!-- Включает аннотацию @Controller -->
    <mvc:annotation-driven/>

    <!-- Чтобы использовать в проекте аннотации -->
    <context:annotation-config/>
</beans>