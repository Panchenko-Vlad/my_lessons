package LessonsJavaCore.Urvanov.ru;

/**
 * Поток ввода/вывода (I/O Stream) представляет собой источник данных или место их назначения. Потоки могут
 * * * представлять собой абсолютно различные источники и места назначения: файлы на диска, устройства, сеть,
 * * * другие программы, массивы в памяти т. д.
 * * *
 * * * Независимо от внутреннего устройства потоки представляют собой одинаковую модель для программы.
 * * * Поток представляет собой последовательность данных.
 *
 * Потоки байт
 * * * Все классы, работающие с потоками байт, наследуются от абстрактных классов java.io.InputStream или
 * * * java.io.OutputStream.
 */

/**
 * java.io.InputStream
 * * * Абстрактный класс, являющийся базовым классом для всех классов, представляющий поток ввода.
 *
 * Основные методы:
 * * * public int available() throws IOException // Возвращает количество байт, которое может быть прочитано
 * * *                                               из потока без блокировки. Некоторые реализации InputStream
 * * *                                               возвращают полное количество байт в потоке, но не все. Не стоит
 * * *                                               использовать этот метод для определения размера буфера, который
 * * *                                               будет хранить все данные из потока.
 * * *
 * * * public void close() throws IOException // Закрывает поток и освобождает все ресурсы.
 * * *
 * * * public void mark(int readlimit) // Помечает текущую позицию во входной строке. Работает только если
 * * *                                    markSupported() возвращает true. Смысл этого метода в том, что поток
 * * *                                    каким-нибудь образом запоминает все считанные после вызова этого метода
 * * *                                    данные и может вернуть те же самые данные ещё раз после вызова метода reset().
 * * *                                    Если после вызова метода mark(int readLimit) из потока было прочитано больше
 * * *                                    readLimit байт, то поток не обязан запоминать что бы то ни было.
 * * *
 * * * public void reset() throws IOException //
 */


public class IO {
}
