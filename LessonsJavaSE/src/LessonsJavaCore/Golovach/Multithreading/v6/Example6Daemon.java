package LessonsJavaCore.Golovach.Multithreading.v6;

/**
 * В Java процесс завершается тогда, когда завершается последний его поток.
 * Даже если метод main() уже завершился, но еще выполняются порожденные им потоки, система будет ждать их завершения.
 *
 * Однако это правило не относится к особому виду потоков – демонам.
 * Если завершился последний обычный поток процесса, и остались только потоки-демоны,
 * то они будут принудительно завершены и выполнение процесса закончится.
 * Чаще всего потоки-демоны используются для выполнения фоновых задач, обслуживающих процесс в течение его жизни.
 *
 * Объявить поток демоном достаточно просто — нужно перед запуском потока вызвать его метод setDaemon(true);
 * Проверить, является ли поток демоном, можно вызвав его метод boolean isDaemon()
 */

public class Example6Daemon {
    public static void main(String[] args) {
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    System.out.println("Hello!");
                }
            }
        });
        t.setDaemon(true);
        t.start();
        System.out.println("Bye..");
    }
}
